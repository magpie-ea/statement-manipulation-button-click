// In this file you can specify the trial data for your experiment

const situations = [
  { 
      number: 1,
      sequence: ["ACCCD", "ACCDD", "AACDD", "AACCD", "ABCDD", "ABCCD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,3,0,0]}
      ]
  },

  {
      number: 2,
      sequence: ["CDDDD", "CCDDD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [3,3,0,0,0]}
      ]
  },

  {
      number: 3,
      sequence: ["BDDDD", "BBDDD", "BCDDD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [9,9,0,0,0]}
      ]
  },

  {
      number: 4,
      sequence: ["ADDDD", "AADDD", "ABDDD", "ACDDD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,0,0,0]}
      ]
  },

  {
      number: 5,
      sequence: ["CCCDD", "CCCCD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [3,3,3,0,0]}
      ]
  },

  {
      number: 6,
      sequence: ["BCCCD", "BCCDD", "BBCDD", "BBCCD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [9,9,3,0,0]}
      ]
  },

  {
      number: 7,
      sequence: ["BBBDD", "BBBBD", "BBBCD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [9,9,9,0,0]}
      ]
  },

  {
      number: 8,
      sequence: ["ABBBD", "ABBDD", "AABDD", "ABBBD", "ABBCD", "AABCD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,9,0,0]}
      ]
  },

  {
      number: 9,
      sequence: ["AAADD", "AAAAD", "AAABD", "AAACD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,12,0,0]}
      ]
  },

  {
      number: 10,
      sequence: ["DDDDD"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [0,0,0,0,0]}
      ]
  },

  {
      number: 11,
      sequence: ["CCCCC"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [3,3,3,3,3]}
      ]
  },

  {
      number: 12,
      sequence: ["BCCCC", "BBCCC"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [9,9,3,3,3]}
      ]
  },

  {
      number: 13,
      sequence: ["ACCCC", "AACCC", "ABCCC"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,3,3,3]}
      ]
  },

  {
      number: 14,
      sequence: ["BBBCC", "BBBBC"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [9,9,9,3,3]}
      ]
  },

  {
      number: 15,
      sequence: ["ABBBC", "ABBCC", "AABCC", "AABBC"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,9,3,3]}
      ]
  },

  {
      number: 16,
      sequence: ["AAACC", "AAAAC", "AAABC"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,12,3,3]}
      ]
  },

  {
      number: 17,
      sequence: ["BBBBB"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [9,9,9,9,9]}
      ]
  },

  {
      number: 18,
      sequence: ["ABBBB", "AABBB"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,9,9,9]}
      ]
  },

  {
      number: 19,
      sequence: ["AAABB", "AAAAB"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,12,9,9]}
      ]
  },

  {
      number: 20,
      sequence: ["AAAAA"],
      truth_table: [],
      instances: [
          {n_col: 12, rows: [12,12,12,12,12]}
      ]
  }

];


// training trials are two specifically chosen situations
// one is "high" second is "low", presented in alternation:

// const training_situations = _.sampleSize(_.range(situations.length), 2);
const training_situations = [3,11];
const training_trials_data = _.flatten([
    create_trials_situation(1, "high", situations[training_situations[0]]),
    create_trials_situation(1, "low", situations[training_situations[0]]),
    create_trials_situation(1, "high", situations[training_situations[1]]),
    create_trials_situation(1, "low", situations[training_situations[1]])
]);

// the main trials are generated by calling the function create_trials with the corresponding arguments
// generate trials for flat bias (nr of trials, nr of rows, nr of columns, bias)

// main trials

const high_low_allocation = _.shuffle(
    ["high", "high", "high", "high", "high", "high", "high", "high", "high", "high",
     "low", "low", "low", "low", "low", "low", "low", "low", "low", "low" ]
);

const main_trials_data = _.shuffle(_.flatten([

    create_trials_situation(1, high_low_allocation[0], situations[0]),
    create_trials_situation(1, high_low_allocation[1], situations[1]),
    create_trials_situation(1, high_low_allocation[2], situations[2]),
    create_trials_situation(1, high_low_allocation[3], situations[3]),
    create_trials_situation(1, high_low_allocation[4], situations[4]),
    create_trials_situation(1, high_low_allocation[5], situations[5]),
    create_trials_situation(1, high_low_allocation[6], situations[6]),
    create_trials_situation(1, high_low_allocation[7], situations[7]),
    create_trials_situation(1, high_low_allocation[8], situations[8]),
    create_trials_situation(1, high_low_allocation[9], situations[9]),
    create_trials_situation(1, high_low_allocation[10], situations[10]),
    create_trials_situation(1, high_low_allocation[11], situations[11]),
    create_trials_situation(1, high_low_allocation[12], situations[12]),
    create_trials_situation(1, high_low_allocation[13], situations[13]),
    create_trials_situation(1, high_low_allocation[14], situations[14]),
    create_trials_situation(1, high_low_allocation[15], situations[15]),
    create_trials_situation(1, high_low_allocation[16], situations[16]),
    create_trials_situation(1, high_low_allocation[17], situations[17]),
    create_trials_situation(1, high_low_allocation[18], situations[18]),
    create_trials_situation(1, high_low_allocation[19], situations[19])

]));
